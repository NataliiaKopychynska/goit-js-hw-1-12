{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["import '../css/styles.css';\n\n// pixabay-api.js\nimport axios from 'axios';\n\nconst API_KEY = '46929874-64df5169043d6b6fbb8fb2b93';\n\n// export async function fetchImages(query, page = 1) {\n//   const url = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=15`;\n\n//   try {\n//     const response = await axios.get(url);\n//     return response.data.hits; // Повертаємо масив зображень\n//   } catch (error) {\n//     console.error('Error fetching images:', error);\n//     return [];\n//   }\n// }\n\nexport async function fetchImages(query, page = 1) {\n  const url = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=15`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data.hits; // Повертаємо масив зображень\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    return [];\n  }\n}\n","import '../css/styles.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// export function renderImages(images) {\n//   const gallery = document.querySelector('.gallery');\n//   const btnLoadMore = document.querySelector('.js-load-more');\n//   gallery.innerHTML = ''; // Очищаємо галерею перед додаванням нових зображень\n\n//   // Показуємо індикатор завантаження\n//   showLoadingIndicator(true);\n\n//   images.forEach(image => {\n//     const card = document.createElement('a');\n//     card.href = image.largeImageURL;\n//     card.classList.add('gallery-item');\n\n//     const img = document.createElement('img');\n//     img.src = image.webformatURL;\n//     img.alt = image.tags;\n//     img.classList.add('image');\n\n//     const info = document.createElement('div');\n//     info.classList.add('image-info');\n//     info.innerHTML = `\n//     <p class=\"paragraf-text\">\n//     <span class=\"span-text\">Likes:</span> ${image.likes}\n//     </p>\n//     <p class=\"paragraf-text\">\n//     <span class=\"span-text\">Views:</span> ${image.views}\n//     </p>\n//     <p class=\"paragraf-text\">\n//     <span class=\"span-text\">Comments:</span> ${image.comments}\n//     </p>\n//     <p class=\"paragraf-text\">\n//     <span class=\"span-text\">Downloads:</span> ${image.downloads}\n//     </p>\n//     `;\n\n//     card.appendChild(img);\n//     card.appendChild(info);\n//     gallery.appendChild(card);\n//   });\n\n//   // Приховуємо індикатор завантаження після рендерингу\n//   showLoadingIndicator(false);\n\n//   // Оновлюємо SimpleLightbox після додавання нових карток\n//   const lightbox = new SimpleLightbox('.gallery a', {\n//     captionsData: 'alt',\n//     captionPosition: 'bottom',\n//     captionDelay: 250,\n//   });\n// }\n\nexport function renderImages(images, clearGallery = false) {\n  const gallery = document.querySelector('.gallery');\n\n  // Clear the gallery only if clearGallery is true\n  if (clearGallery) {\n    gallery.innerHTML = '';\n  }\n\n  images.forEach(image => {\n    const card = document.createElement('a');\n    card.href = image.largeImageURL;\n    card.classList.add('gallery-item');\n\n    const img = document.createElement('img');\n    img.src = image.webformatURL;\n    img.alt = image.tags;\n    img.classList.add('image');\n\n    const info = document.createElement('div');\n    info.classList.add('image-info');\n    info.innerHTML = `\n      <p class=\"paragraf-text\"><span class=\"span-text\">Likes:</span> ${image.likes}</p>\n      <p class=\"paragraf-text\"><span class=\"span-text\">Views:</span> ${image.views}</p>\n      <p class=\"paragraf-text\"><span class=\"span-text\">Comments:</span> ${image.comments}</p>\n      <p class=\"paragraf-text\"><span class=\"span-text\">Downloads:</span> ${image.downloads}</p>\n    `;\n\n    card.appendChild(img);\n    card.appendChild(info);\n    gallery.appendChild(card);\n  });\n\n  // Update SimpleLightbox after adding new images\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionPosition: 'bottom',\n    captionDelay: 250,\n  });\n}\n\n// Clear the gallery\nexport function clearGallery() {\n  document.querySelector('.gallery').innerHTML = '';\n}\n\nexport function renderError(message) {\n  iziToast.error({\n    title: 'Error',\n    message: message,\n    position: 'topRight',\n    timeout: 5000,\n  });\n}\n\n// export function showLoadingIndicator(show) {\n//   const loadingIndicator = document.querySelector('.loading-indicator');\n//   loadingIndicator.style.display = show ? 'block' : 'none';\n// }\nexport function showLoadingIndicator() {\n  document.querySelector('.loading-indicator').style.display = 'block';\n}\n\nexport function hideLoadingIndicator() {\n  document.querySelector('.loading-indicator').style.display = 'none';\n}\n\nexport function showLoadMoreButton() {\n  const loadMoreButton = document.querySelector('.js-load-more');\n  loadMoreButton.classList.remove('load-more-hiden');\n\n  // const EndLoadText = document.querySelector('.no-more-images-message');\n  // EndLoadText.classList.classList.add('load-more-hiden');\n}\n\n// Функція для приховування кнопки \"Load more\"\nexport function hideLoadMoreButton() {\n  const loadMoreButton = document.querySelector('.js-load-more');\n  loadMoreButton.classList.add('load-more-hiden');\n\n  // const EndLoadText = document.querySelector('.no-more-images-message');\n  // EndLoadText.classList.classList.remove('load-more-hiden');\n}\n","import './css/styles.css';\n\nimport { fetchImages } from './js/pixabay-api';\nimport {\n  renderImages,\n  renderError,\n  showLoadMoreButton,\n  hideLoadMoreButton,\n  showLoadingIndicator,\n  hideLoadingIndicator,\n  clearGallery,\n} from './js/render-function';\n\nconst searchForm = document.getElementById('searchForm');\nconst searchInput = document.getElementById('searchInput');\nconst MoreBtn = document.querySelector('.js-load-more');\n\nlet currentPage = 1; // Початковий номер сторінки\nlet searchQuery = ''; // Пошуковий запит\n// let totalImages = 0; // Змінна для збереження загальної кількості зображень\nlet totalLoadedImages = 0;\n\n// Обробник для натискання на кнопку \"Load More\"\nMoreBtn.addEventListener('click', loadMoreImages);\n\n// Обробник для сабміту форми пошуку\nsearchForm.addEventListener('submit', async e => {\n  e.preventDefault(); // Запобігаємо перезавантаженню сторінки при сабміті\n\n  searchQuery = searchInput.value.trim();\n  currentPage = 1; // Скидаємо сторінку на 1 при новому пошуку\n  //!\n  totalLoadedImages = 0;\n  // Перевірка на порожнє поле\n  if (!searchQuery) {\n    renderError('Please enter a search query.');\n    return;\n  }\n\n  // try {\n  //   const images = await fetchImages(searchQuery, currentPage);\n\n  //   if (images.length === 0) {\n  //     renderError(\n  //       'Sorry, there are no images matching your search query. Please try again.'\n  //     );\n  //   } else {\n  //     renderImages(images); // Виводимо зображення\n  //     totalImages = images.length; // Записуємо кількість завантажених зображень\n  //     showLoadMoreButton(); // Показуємо кнопку \"Load more\"\n  //     if (images.length < 15) {\n  //       hideLoadMoreButton(); // Якщо зображень менше 15, ховаємо кнопку\n  //     }\n  //   }\n  // } catch (error) {\n  //   renderError(\n  //     'An error occurred while fetching images. Please try again later.'\n  //   );\n  // }\n  clearGallery(); // Clear gallery for new search\n  showLoadingIndicator(); // Show loading indicator\n\n  try {\n    // Fetch the first set of images\n    const images = await fetchImages(searchQuery, currentPage);\n\n    if (images.length === 0) {\n      renderError(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      hideLoadMoreButton();\n    } else {\n      renderImages(images, true); // Render images and clear previous results\n      totalLoadedImages += images.length;\n\n      // Show or hide \"Load more\" button depending on the number of results\n      if (images.length < 15) {\n        hideLoadMoreButton();\n      } else {\n        showLoadMoreButton();\n      }\n    }\n  } catch (error) {\n    renderError(\n      'An error occurred while fetching images. Please try again later.'\n    );\n  } finally {\n    hideLoadingIndicator(); // Hide loading indicator\n  }\n\n  searchInput.value = ''; // Очищення поля вводу після пошуку\n});\n\n// Функція для завантаження наступних 15 зображень\n// export async function loadMoreImages() {\n//   currentPage += 1; // Збільшуємо сторінку на 1\n\n//   try {\n//     const newImages = await fetchImages(searchQuery, currentPage);\n\n//     // Додаємо нові зображення до вже існуючих\n//     renderImages(newImages);\n\n//     totalImages += newImages.length; // Оновлюємо загальну кількість завантажених зображень\n\n//     // Якщо зображень менше 15, приховуємо кнопку \"Load more\"\n//     if (newImages.length < 15 || totalImages >= 500) {\n//       hideLoadMoreButton();\n//     }\n//   } catch (error) {\n//     renderError(\n//       'An error occurred while fetching more images. Please try again later.'\n//     );\n//   }\n// }\nasync function loadMoreImages() {\n  currentPage += 1; // Move to the next page\n\n  try {\n    const newImages = await fetchImages(searchQuery, currentPage);\n\n    // Append new images to the gallery\n    renderImages(newImages, false); // Append images without clearing previous results\n    totalLoadedImages += newImages.length;\n\n    // Scroll down by 2 image heights\n    scrollByTwoImageHeights();\n\n    // Hide \"Load more\" button if fewer than 15 images were loaded\n    if (newImages.length < 15) {\n      hideLoadMoreButton();\n    }\n  } catch (error) {\n    renderError(\n      'An error occurred while fetching more images. Please try again later.'\n    );\n  }\n}\n\n// Function to scroll down by the height of two images\nfunction scrollByTwoImageHeights() {\n  const gallery = document.querySelector('.gallery');\n  const firstImage = gallery.querySelector('img');\n\n  if (firstImage) {\n    const imageHeight = firstImage.offsetHeight;\n    window.scrollBy({\n      top: imageHeight * 2,\n      behavior: 'smooth',\n    });\n  }\n}\n"],"names":["API_KEY","fetchImages","query","page","url","axios","error","renderImages","images","clearGallery","gallery","image","card","img","info","SimpleLightbox","renderError","message","showLoadingIndicator","hideLoadingIndicator","showLoadMoreButton","hideLoadMoreButton","searchForm","searchInput","MoreBtn","currentPage","searchQuery","totalLoadedImages","loadMoreImages","e","newImages","scrollByTwoImageHeights","firstImage","imageHeight"],"mappings":"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"}